{"ast":null,"code":"var _jsxFileName = \"/home/erison/Documents/Projetos/botw-compendium-ReactJs/src/components/main.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Loading from \"../svg/loading.svg\";\nimport Monsters from './monsters/monsters';\nimport Equipments from './equipments/equipments';\nimport Materials from './materials/materials';\nimport Treasures from './treasures/treasures';\nimport Creatures from './creatures/creatures';\nimport Header from './header/header';\n/*\nComponente Main\n    -Responsável por solicitar os dados da API\n    -Passar os dados para JSON\n    -Criar os states contento os dados\n    -Passar os dados para cada componente como parâmetros\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  // A função fetchAPI recebe como parâmetro a url de cada entrada da API. 'SetList' é responsável por definir o state quando a função é chamada.\n  const fetchAPI = (url, setList) => {\n    fetch(url).then(response => response.json()).then(responseText => setList(responseText.data));\n  }; // State onde os dados da API serão armazenados\n\n\n  const [monstersList, setmonsterList] = useState([]);\n  const [equipmentsList, setequipmentList] = useState([]);\n  const [materialsList, setmaterialsList] = useState([]);\n  const [treasuresList, settreasuresList] = useState([]);\n  const [creaturesList, setcreaturesList] = useState([]);\n  const [content, setContent] = useState('Monsters'); // Define qual componente será renderizado\n\n  const [searchterm, setsearchTerm] = useState(''); // Termo de busca\n\n  useEffect(() => {\n    fetchAPI('https://botw-compendium.herokuapp.com/api/v2/category/monsters', setmonsterList);\n    fetchAPI('https://botw-compendium.herokuapp.com/api/v2/category/materials', setmaterialsList);\n    fetchAPI('https://botw-compendium.herokuapp.com/api/v2/category/treasure', settreasuresList);\n    fetchAPI('https://botw-compendium.herokuapp.com/api/v2/category/creatures', setcreaturesList);\n  }, []);\n\n  if (content === 'Monsters') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        content: content,\n        setContent: setContent,\n        setsearchTerm: setsearchTerm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), monstersList.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Loading,\n          alt: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 67\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 42\n      }, this) : /*#__PURE__*/_jsxDEV(Monsters, {\n        monstersList: monstersList,\n        searchterm: searchterm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 113\n      }, this)]\n    }, void 0, true);\n  }\n\n  if (content === 'Equipments') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        content: content,\n        setContent: setContent,\n        setsearchTerm: setsearchTerm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), equipmentsList.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Loading,\n          alt: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 69\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 44\n      }, this) : /*#__PURE__*/_jsxDEV(Equipments, {\n        fetchAPI: fetchAPI,\n        equipmentsList: equipmentsList,\n        setequipmentList: setequipmentList,\n        searchterm: searchterm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 115\n      }, this)]\n    }, void 0, true);\n  }\n\n  if (content === 'Materials') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        content: content,\n        setContent: setContent,\n        setsearchTerm: setsearchTerm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), materialsList.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Loading,\n          alt: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 68\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 43\n      }, this) : /*#__PURE__*/_jsxDEV(Materials, {\n        materialsList: materialsList,\n        searchterm: searchterm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 114\n      }, this)]\n    }, void 0, true);\n  }\n\n  if (content === 'Treasures') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        content: content,\n        setContent: setContent,\n        setsearchTerm: setsearchTerm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), treasuresList.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Loading,\n          alt: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 68\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 43\n      }, this) : /*#__PURE__*/_jsxDEV(Treasures, {\n        treasuresList: treasuresList,\n        searchterm: searchterm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 114\n      }, this)]\n    }, void 0, true);\n  }\n\n  if (content === 'Creatures') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        content: content,\n        setContent: setContent,\n        setsearchTerm: setsearchTerm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), creaturesList.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Loading,\n          alt: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 68\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 43\n      }, this) : /*#__PURE__*/_jsxDEV(Creatures, {\n        creaturesList: creaturesList,\n        searchterm: searchterm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 114\n      }, this)]\n    }, void 0, true);\n  }\n};\n\n_s(Main, \"9r9K4TI1VgM8nMYwizbwaTBuxXo=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/home/erison/Documents/Projetos/botw-compendium-ReactJs/src/components/main.jsx"],"names":["React","useState","useEffect","Monsters","Equipments","Materials","Treasures","Creatures","Header","Main","fetchAPI","url","setList","fetch","then","response","json","responseText","data","monstersList","setmonsterList","equipmentsList","setequipmentList","materialsList","setmaterialsList","treasuresList","settreasuresList","creaturesList","setcreaturesList","content","setContent","searchterm","setsearchTerm","length","Loading"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Loading from '../svg/loading.svg'\nimport Monsters from './monsters/monsters'\nimport Equipments from './equipments/equipments'\nimport Materials from './materials/materials'\nimport Treasures from './treasures/treasures'\nimport Creatures from './creatures/creatures'\nimport Header from './header/header'\n\n\n/*\nComponente Main\n    -Responsável por solicitar os dados da API\n    -Passar os dados para JSON\n    -Criar os states contento os dados\n    -Passar os dados para cada componente como parâmetros\n*/\nconst Main = () => {\n    // A função fetchAPI recebe como parâmetro a url de cada entrada da API. 'SetList' é responsável por definir o state quando a função é chamada.\n    const fetchAPI = (url, setList) => {\n        fetch(url)\n        .then(response => response.json())\n        .then(responseText => setList(responseText.data))\n    }\n    // State onde os dados da API serão armazenados\n    const [monstersList, setmonsterList] = useState([]);\n    const [equipmentsList, setequipmentList] = useState([]);\n    const [materialsList, setmaterialsList] = useState([]);\n    const [treasuresList, settreasuresList] = useState([]);\n    const [creaturesList, setcreaturesList] = useState([]);\n\n    const [content, setContent] = useState('Monsters');// Define qual componente será renderizado\n    const [searchterm, setsearchTerm] = useState('');// Termo de busca\n\n    useEffect(() => {\n        fetchAPI('https://botw-compendium.herokuapp.com/api/v2/category/monsters', setmonsterList);\n        fetchAPI('https://botw-compendium.herokuapp.com/api/v2/category/materials', setmaterialsList);\n        fetchAPI('https://botw-compendium.herokuapp.com/api/v2/category/treasure', settreasuresList);\n        fetchAPI('https://botw-compendium.herokuapp.com/api/v2/category/creatures', setcreaturesList);\n    }, [])\n\n    if (content === 'Monsters') {\n        return ( \n            <>\n            <Header content={content} setContent={setContent} setsearchTerm={setsearchTerm}/>\n            {monstersList.length === 0 ? <div className=\"loading\"><img src={Loading} alt=\"Loading...\"/></div> : <Monsters monstersList={monstersList} searchterm={searchterm}/>}\n            </>\n        );\n    } \n    if (content === 'Equipments') {\n        return (\n            <>\n            <Header content={content} setContent={setContent} setsearchTerm={setsearchTerm}/>\n            {equipmentsList.length === 0 ? <div className=\"loading\"><img src={Loading} alt=\"Loading...\"/></div> : <Equipments fetchAPI={fetchAPI} equipmentsList={equipmentsList} setequipmentList={setequipmentList} searchterm={searchterm}/>}\n            </>\n        )\n    }\n    if (content === 'Materials') {\n        return (\n            <>\n            <Header content={content} setContent={setContent} setsearchTerm={setsearchTerm}/>\n            {materialsList.length === 0 ? <div className=\"loading\"><img src={Loading} alt=\"Loading...\"/></div> : <Materials materialsList={materialsList} searchterm={searchterm}/>}\n            </>\n        )\n    }\n    if (content === 'Treasures') {\n        return (\n            <>\n            <Header content={content} setContent={setContent} setsearchTerm={setsearchTerm}/>\n            {treasuresList.length === 0 ? <div className=\"loading\"><img src={Loading} alt=\"Loading...\"/></div> : <Treasures treasuresList={treasuresList} searchterm={searchterm}/>}\n            </>\n        )\n    }\n    if (content === 'Creatures') {\n        return (\n            <>\n            <Header content={content} setContent={setContent} setsearchTerm={setsearchTerm}/>\n            {creaturesList.length === 0 ? <div className=\"loading\"><img src={Loading} alt=\"Loading...\"/></div> : <Creatures creaturesList={creaturesList} searchterm={searchterm}/>}\n            </>\n        )\n    }\n}\n \nexport default Main;"]},"metadata":{},"sourceType":"module"}