{"ast":null,"code":"var _jsxFileName = \"/home/erison/Documents/the_odin_project/botw-compendium-ReactJs/src/components/main.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Monsters from './monsters';\nimport Equipments from './equipments';\nimport Materials from './materials';\nimport Treasures from './treasures';\nimport Header from './header'; // parent \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  function fetchAPI(url) {} //fetch na sessão 'monsters' da API e converte para JSON\n\n\n  var [monstersList, setmonsterList] = useState([]);\n  useEffect(() => {\n    async function fetchMonsters() {\n      const API_URL = 'https://botw-compendium.herokuapp.com/api/v2/category/monsters';\n      var monsters = fetchAPI(API_URL);\n      var monsters_data = await JSON.parse(monsters);\n      setmonsterList(monsters_data.data);\n    }\n\n    fetchMonsters();\n  }, []); //fetch na sessão 'equipments' da API e converte para JSON\n\n  var [equipmentsList, setequipmentList] = useState([]);\n  useEffect(() => {\n    async function fetchEquipments() {\n      const API_URL = 'https://botw-compendium.herokuapp.com/api/v2/category/equipment';\n      var equipments = fetchAPI(API_URL);\n      var equipments_data = JSON.parse(equipments);\n      setequipmentList(equipments_data.data);\n    }\n\n    fetchEquipments();\n  }, []); //fetch na sessão 'materials' da API e converte para JSON\n\n  var [materialsList, setmaterialsList] = useState([]);\n  useEffect(() => {\n    async function fetchMaterials() {\n      const API_URL = 'https://botw-compendium.herokuapp.com/api/v2/category/materials';\n      var materials = fetchAPI(API_URL);\n      var materials_data = JSON.parse(materials);\n      setmaterialsList(materials_data.data);\n    }\n\n    fetchMaterials();\n  }, []); //fetch na sessão 'treasures' da API e converte para JSON\n\n  var [treasuresList, settreasuresList] = useState([]);\n  useEffect(() => {\n    async function fetchTreasures() {\n      const API_URL = 'https://botw-compendium.herokuapp.com/api/v2/category/treasure';\n      var treasures = fetchAPI(API_URL);\n      var treasures_data = JSON.parse(treasures);\n      settreasuresList(treasures_data.data);\n    }\n\n    fetchTreasures();\n  }, []);\n  const [content, setContent] = useState('Monsters');\n\n  if (content === 'Monsters') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        content: content,\n        setContent: setContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Monsters, {\n        monstersList: monstersList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), \"             \"]\n    }, void 0, true);\n  }\n\n  if (content === 'Equipments') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        content: content,\n        setContent: setContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Equipments, {\n        equipmentsList: equipmentsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n  if (content === 'Materials') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        content: content,\n        setContent: setContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Materials, {\n        materialsList: materialsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n  if (content === 'Treasures') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        content: content,\n        setContent: setContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Treasures, {\n        treasuresList: treasuresList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n};\n\n_s(Main, \"X/oCi4BzxAPuraRHXGTqnOXGeo8=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/home/erison/Documents/the_odin_project/botw-compendium-ReactJs/src/components/main.jsx"],"names":["React","useState","useEffect","Monsters","Equipments","Materials","Treasures","Header","Main","fetchAPI","url","monstersList","setmonsterList","fetchMonsters","API_URL","monsters","monsters_data","JSON","parse","data","equipmentsList","setequipmentList","fetchEquipments","equipments","equipments_data","materialsList","setmaterialsList","fetchMaterials","materials","materials_data","treasuresList","settreasuresList","fetchTreasures","treasures","treasures_data","content","setContent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Monsters from './monsters'\nimport Equipments from './equipments'\nimport Materials from './materials'\nimport Treasures from './treasures'\nimport Header from './header'\n\n\n// parent \nconst Main = () => {\n\n    function fetchAPI(url) {\n        \n    }\n    //fetch na sessão 'monsters' da API e converte para JSON\n    \n    var [monstersList, setmonsterList] = useState([])\n\n    useEffect(() => {\n        async function fetchMonsters() {\n            const API_URL = 'https://botw-compendium.herokuapp.com/api/v2/category/monsters'\n            var monsters = fetchAPI(API_URL);\n            var monsters_data = await JSON.parse(monsters);\n            setmonsterList(monsters_data.data)\n        } \n        fetchMonsters();\n    }, [])\n\n    //fetch na sessão 'equipments' da API e converte para JSON\n    \n    var [equipmentsList, setequipmentList] = useState([])\n    \n    useEffect(() => {\n        async function fetchEquipments() {\n            const API_URL = 'https://botw-compendium.herokuapp.com/api/v2/category/equipment'\n            var equipments = fetchAPI(API_URL);\n            var equipments_data = JSON.parse(equipments);\n            setequipmentList(equipments_data.data)\n        }\n        fetchEquipments();\n    }, [])\n\n    //fetch na sessão 'materials' da API e converte para JSON\n\n    var [materialsList, setmaterialsList] = useState([])\n\n    useEffect(() => {\n        async function fetchMaterials() {\n            const API_URL = 'https://botw-compendium.herokuapp.com/api/v2/category/materials'\n            var materials = fetchAPI(API_URL);\n            var materials_data = JSON.parse(materials);\n            setmaterialsList(materials_data.data)\n        }\n        fetchMaterials();\n    }, [])\n    //fetch na sessão 'treasures' da API e converte para JSON\n\n    var [treasuresList, settreasuresList] = useState([])\n\n    useEffect(() => {\n        async function fetchTreasures() {\n            const API_URL = 'https://botw-compendium.herokuapp.com/api/v2/category/treasure'\n            var treasures = fetchAPI(API_URL);\n            var treasures_data = JSON.parse(treasures);\n            settreasuresList(treasures_data.data)\n        }\n        fetchTreasures();\n    }, [])\n\n    const [content, setContent] = useState('Monsters');\n\n    if (content === 'Monsters') {\n        return ( \n            <>\n            <Header content={content} setContent={setContent}/>\n            <Monsters monstersList={monstersList}/>             {/*passa o objeto da API como parametro para o componente child*/}\n            </>\n        );\n    } \n\n    if (content === 'Equipments') {\n        return (\n            <>\n            <Header content={content} setContent={setContent}/>\n            <Equipments equipmentsList={equipmentsList}/>\n            </>\n        )\n    }\n\n    if (content === 'Materials') {\n        return (\n            <>\n            <Header content={content} setContent={setContent}/>\n            <Materials materialsList={materialsList}/>\n            </>\n        )\n    }\n    if (content === 'Treasures') {\n        return (\n            <>\n            <Header content={content} setContent={setContent}/>\n            <Treasures treasuresList={treasuresList}/>\n            </>\n        )\n    }\n\n}\n \nexport default Main;"]},"metadata":{},"sourceType":"module"}