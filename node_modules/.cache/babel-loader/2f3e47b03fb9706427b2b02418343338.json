{"ast":null,"code":"var _jsxFileName = \"/home/erison/Documents/Projetos/botw-compendium-ReactJs/src/components/monsters.jsx\";\nimport React from 'react';\nimport LazyLoad from 'react-lazyload'; //Componente Monsters: Responsável por renderizar os dados da entrada 'monsters' da API, recebidos pelo componente Main.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Monsters = ({\n  monstersList,\n  searchterm\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"monsters\",\n    children: monstersList.filter(val => {\n      if (searchterm === '') {\n        return val;\n      } else if (val.name.includes(searchterm)) {\n        return val;\n      }\n\n      return false;\n    }).map(monster => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"monster-item\",\n      children: /*#__PURE__*/_jsxDEV(LazyLoad, {\n        height: 200,\n        offset: -500,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: monster.name.toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: monster.image,\n          alt: monster.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: monster.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [\"Common Locations \", monster.common_locations === null || monster.common_locations.length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Hyrule\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this) : monster.common_locations.map(location => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: location\n          }, location + monster.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 72\n          }, this)), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [\"Drops \", monster.drops == null || monster.drops.length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"None\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this) : monster.drops.map(drop => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: drop.charAt(0).toUpperCase() + drop.slice(1)\n            }, drop + monster.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 57\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)\n    }, monster.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Monsters;\nexport default Monsters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Monsters\");","map":{"version":3,"sources":["/home/erison/Documents/Projetos/botw-compendium-ReactJs/src/components/monsters.jsx"],"names":["React","LazyLoad","Monsters","monstersList","searchterm","filter","val","name","includes","map","monster","toUpperCase","image","description","common_locations","length","location","id","drops","drop","charAt","slice"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB,C,CAEA;;;;AACA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,YAAD;AAAeC,EAAAA;AAAf,CAAD,KAAgC;AAE/C,sBAEE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,cACGD,YAAY,CAACE,MAAb,CAAqBC,GAAD,IAAS;AAC5B,UAAIF,UAAU,KAAK,EAAnB,EAAuB;AACrB,eAAOE,GAAP;AACD,OAFD,MAEO,IAAIA,GAAG,CAACC,IAAJ,CAASC,QAAT,CAAkBJ,UAAlB,CAAJ,EAAmC;AACxC,eAAOE,GAAP;AACD;;AACC,aAAO,KAAP;AACH,KAPA,EAOEG,GAPF,CAOOC,OAAD,iBACL;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,MAAM,EAAE,GAAlB;AAAuB,QAAA,MAAM,EAAE,CAAC,GAAhC;AAAA,gCACA;AAAA,oBAAKA,OAAO,CAACH,IAAR,CAAaI,WAAb;AAAL;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAK,UAAA,GAAG,EAAED,OAAO,CAACE,KAAlB;AAAyB,UAAA,GAAG,EAAEF,OAAO,CAACH;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGA;AAAA,oBAAIG,OAAO,CAACG;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAHA,eAIA;AAAA,0CACoBH,OAAO,CAACI,gBAAR,KAA6B,IAA7B,IAAqCJ,OAAO,CAACI,gBAAR,CAAyBC,MAAzB,KAAoC,CAAzE,gBAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADkB,GACAL,OAAO,CAACI,gBAAR,CAAyBL,GAAzB,CAA6BO,QAAQ,iBAAI;AAAA,sBAAiCA;AAAjC,aAASA,QAAQ,GAAGN,OAAO,CAACO,EAA5B;AAAA;AAAA;AAAA;AAAA,kBAAzC,CAFpB,eAGE;AAAA,iCACSP,OAAO,CAACQ,KAAR,IAAiB,IAAjB,IAAyBR,OAAO,CAACQ,KAAR,CAAcH,MAAd,KAAyB,CAAlD,gBACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADO,GACSL,OAAO,CAACQ,KAAR,CAAcT,GAAd,CAAkBU,IAAI,iBAAI;AAAA,wBAA6BA,IAAI,CAACC,MAAL,CAAY,CAAZ,EAAeT,WAAf,KAA+BQ,IAAI,CAACE,KAAL,CAAW,CAAX;AAA5D,eAASF,IAAI,GAAGT,OAAO,CAACO,EAAxB;AAAA;AAAA;AAAA;AAAA,oBAA1B,CAFlB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,OAAmCP,OAAO,CAACO,EAA3C;AAAA;AAAA;AAAA;AAAA,YARD;AADH;AAAA;AAAA;AAAA;AAAA,UAFF;AA8BD,CAhCD;;KAAMf,Q;AAkCN,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport LazyLoad from 'react-lazyload';\n\n//Componente Monsters: Responsável por renderizar os dados da entrada 'monsters' da API, recebidos pelo componente Main.\nconst Monsters = ({monstersList, searchterm}) => {\n\n  return (  \n\n    <div className='monsters'>\n      {monstersList.filter((val) => {\n        if (searchterm === '') {\n          return val\n        } else if (val.name.includes(searchterm)) {\n          return val\n        }\n          return false\n      }).map((monster) =>\n        <div className='monster-item' key={monster.id}>\n          <LazyLoad height={200} offset={-500}> \n          <h1>{monster.name.toUpperCase()}</h1>\n          <img src={monster.image} alt={monster.name}/>\n          <p>{monster.description}</p>\n          <ul>\n            Common Locations {monster.common_locations === null || monster.common_locations.length === 0 ? \n            <li>Hyrule</li> : monster.common_locations.map(location => <li key={location + monster.id}>{location}</li>)}\n            <ul>\n              Drops {monster.drops == null || monster.drops.length === 0 ? \n              <li>None</li> : monster.drops.map(drop => <li key={drop + monster.id}>{drop.charAt(0).toUpperCase() + drop.slice(1)}</li>)}\n            </ul>\n          </ul>\n          </LazyLoad>\n        </div>\n      )}\n    </div>\n\n  )\n}\n \nexport default Monsters;\n"]},"metadata":{},"sourceType":"module"}