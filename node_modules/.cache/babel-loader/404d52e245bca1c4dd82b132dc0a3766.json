{"ast":null,"code":"var _jsxFileName = \"/home/erison/Documents/the_odin_project/botw-compendium-ReactJs/src/components/main.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Monsters from './monsters';\nimport Equipments from './equipments';\nimport Materials from './materials';\nimport Treasures from './treasures';\nimport Creatures from './creatures';\nimport Header from './header'; // parent \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const fetchAPI = (url, setList) => {\n    fetch(url).then(response => response.json()).then(responseText => setList(responseText.data));\n  }; //fetch na sessão 'monsters' da API e converte para JSON\n\n\n  var [monstersList, setmonsterList] = useState([]);\n  useEffect(() => {\n    fetchAPI('https://botw-compendium.herokuapp.com/api/v2/category/monsters', setmonsterList);\n  }, []); //fetch na sessão 'equipments' da API e converte para JSON\n\n  var [equipmentsList, setequipmentList] = useState([]);\n  useEffect(() => {\n    fetchAPI('https://botw-compendium.herokuapp.com/api/v2/category/equipment', setequipmentList);\n  }, []); //fetch na sessão 'materials' da API e converte para JSON\n\n  var [materialsList, setmaterialsList] = useState([]);\n  useEffect(() => {\n    fetchAPI('https://botw-compendium.herokuapp.com/api/v2/category/materials', setmaterialsList);\n  }, []); //fetch na sessão 'treasures' da API e converte para JSON\n\n  var [treasuresList, settreasuresList] = useState([]);\n  useEffect(() => {\n    fetchAPI('https://botw-compendium.herokuapp.com/api/v2/category/treasure', settreasuresList);\n  }, []); //fetch na sessão 'creatures' da API e converte para JSON\n\n  var [creaturesList, setcreaturesList] = useState([]);\n  var [creaturesFood, setcreatureFood] = useState([]);\n  useEffect(() => {\n    fetchAPI('https://botw-compendium.herokuapp.com/api/v2/category/creatures', setcreaturesList);\n    setcreatureFood(creaturesList);\n  }, []);\n  const [content, setContent] = useState('Monsters');\n\n  if (content === 'Monsters') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        content: content,\n        setContent: setContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Monsters, {\n        monstersList: monstersList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), \"             \"]\n    }, void 0, true);\n  }\n\n  if (content === 'Equipments') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        content: content,\n        setContent: setContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Equipments, {\n        equipmentsList: equipmentsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n  if (content === 'Materials') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        content: content,\n        setContent: setContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Materials, {\n        materialsList: materialsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n  if (content === 'Treasures') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        content: content,\n        setContent: setContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Treasures, {\n        treasuresList: treasuresList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n  if (content === 'Creatures') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        content: content,\n        setContent: setContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Creatures, {\n        creaturesList: creaturesList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n};\n\n_s(Main, \"iUeM55OON7+E/nVLKLlB5jNZp58=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/home/erison/Documents/the_odin_project/botw-compendium-ReactJs/src/components/main.jsx"],"names":["React","useState","useEffect","Monsters","Equipments","Materials","Treasures","Creatures","Header","Main","fetchAPI","url","setList","fetch","then","response","json","responseText","data","monstersList","setmonsterList","equipmentsList","setequipmentList","materialsList","setmaterialsList","treasuresList","settreasuresList","creaturesList","setcreaturesList","creaturesFood","setcreatureFood","content","setContent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Monsters from './monsters'\nimport Equipments from './equipments'\nimport Materials from './materials'\nimport Treasures from './treasures'\nimport Creatures from './creatures'\nimport Header from './header'\n\n\n// parent \nconst Main = () => {\n\n    const fetchAPI = (url, setList) => {\n        fetch(url)\n        .then(response => response.json())\n        .then(responseText => setList(responseText.data))\n    }\n\n    //fetch na sessão 'monsters' da API e converte para JSON\n    \n    var [monstersList, setmonsterList] = useState([])\n\n    useEffect(() => {\n        fetchAPI('https://botw-compendium.herokuapp.com/api/v2/category/monsters', setmonsterList);\n    }, [])\n\n\n    //fetch na sessão 'equipments' da API e converte para JSON\n    \n    var [equipmentsList, setequipmentList] = useState([])\n    \n    useEffect(() => {\n        fetchAPI('https://botw-compendium.herokuapp.com/api/v2/category/equipment', setequipmentList);\n    }, [])\n\n    //fetch na sessão 'materials' da API e converte para JSON\n\n    var [materialsList, setmaterialsList] = useState([])\n\n    useEffect(() => {\n        fetchAPI('https://botw-compendium.herokuapp.com/api/v2/category/materials', setmaterialsList);\n    }, [])\n\n    //fetch na sessão 'treasures' da API e converte para JSON\n\n    var [treasuresList, settreasuresList] = useState([])\n\n    useEffect(() => {\n        fetchAPI('https://botw-compendium.herokuapp.com/api/v2/category/treasure', settreasuresList);\n    }, [])\n\n    //fetch na sessão 'creatures' da API e converte para JSON\n\n    var [creaturesList, setcreaturesList] = useState([]);\n    var [creaturesFood, setcreatureFood] = useState([]);\n\n    useEffect(() => {\n        fetchAPI('https://botw-compendium.herokuapp.com/api/v2/category/creatures', setcreaturesList);\n        setcreatureFood(creaturesList)\n    }, [])\n\n    const [content, setContent] = useState('Monsters');\n\n    if (content === 'Monsters') {\n        return ( \n            <>\n            <Header content={content} setContent={setContent}/>\n            <Monsters monstersList={monstersList}/>             {/*passa o objeto da API como parametro para o componente child*/}\n            </>\n        );\n    } \n\n    if (content === 'Equipments') {\n        return (\n            <>\n            <Header content={content} setContent={setContent}/>\n            <Equipments equipmentsList={equipmentsList}/>\n            </>\n        )\n    }\n\n    if (content === 'Materials') {\n        return (\n            <>\n            <Header content={content} setContent={setContent}/>\n            <Materials materialsList={materialsList}/>\n            </>\n        )\n    }\n    if (content === 'Treasures') {\n        return (\n            <>\n            <Header content={content} setContent={setContent}/>\n            <Treasures treasuresList={treasuresList}/>\n            </>\n        )\n    }\n    if (content === 'Creatures') {\n        return (\n            <>\n            <Header content={content} setContent={setContent}/>\n            <Creatures creaturesList={creaturesList}/>\n            </>\n        )\n    }\n\n}\n \nexport default Main;"]},"metadata":{},"sourceType":"module"}