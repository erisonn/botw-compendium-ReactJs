{"ast":null,"code":"var _jsxFileName = \"/home/erison/Documents/the_odin_project/botw-compendium-ReactJs/src/components/main.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Monsters from './monsters';\nimport Equipments from './equipments';\nimport Materials from './materials';\nimport Treasures from './treasures';\nimport Header from './header'; // parent \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  //fetch na sessão 'monsters' da API e converte para JSON\n  var [monstersList, setmonsterList] = useState([]);\n  useEffect(() => {\n    fetchMonsters();\n  }, []);\n\n  const fetchMonsters = () => {\n    fetch(\"https://botw-compendium.herokuapp.com/api/v2/category/monsters\").then(response => response.json()).then(responseText => setmonsterList(responseText.data));\n  }; //fetch na sessão 'equipments' da API e converte para JSON\n\n\n  var [equipmentsList, setequipmentList] = useState([]);\n  useEffect(() => {\n    fetchEquipments();\n  }, []);\n\n  const fetchEquipments = () => {\n    fetch(\"https://botw-compendium.herokuapp.com/api/v2/category/equipment\").then(response => response.json()).then(responseText => setequipmentList(responseText.data));\n  }; //fetch na sessão 'materials' da API e converte para JSON\n\n\n  var [materialsList, setmaterialsList] = useState([]);\n  useEffect(() => {\n    fetchMaterials();\n  }, []);\n\n  const fetchMaterials = () => {\n    fetch(\"https://botw-compendium.herokuapp.com/api/v2/category/materials\").then(response => response.json()).then(responseText => setmaterialsList(responseText.data));\n  }; //fetch na sessão 'treasures' da API e converte para JSON\n\n\n  var [treasuresList, settreasuresList] = useState([]);\n  useEffect(() => {\n    fetchTreasures();\n  }, []);\n\n  const fetchTreasures = () => {\n    fetch(\"https://botw-compendium.herokuapp.com/api/v2/category/treasure\").then(response => response.json()).then(responseText => settreasuresList(responseText.data));\n  };\n\n  const [content, setContent] = useState('Monsters');\n\n  if (content === 'Monsters') {\n    console.log(monstersList);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        content: content,\n        setContent: setContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Monsters, {\n        monstersList: monstersList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), \"             \"]\n    }, void 0, true);\n  }\n\n  if (content === 'Equipments') {\n    console.log(equipmentsList);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        content: content,\n        setContent: setContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Equipments, {\n        equipmentsList: equipmentsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n  if (content === 'Materials') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        content: content,\n        setContent: setContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Materials, {\n        materialsList: materialsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n  if (content === 'Treasures') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        content: content,\n        setContent: setContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Treasures, {\n        treasuresList: treasuresList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n};\n\n_s(Main, \"X/oCi4BzxAPuraRHXGTqnOXGeo8=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/home/erison/Documents/the_odin_project/botw-compendium-ReactJs/src/components/main.jsx"],"names":["React","useState","useEffect","Monsters","Equipments","Materials","Treasures","Header","Main","monstersList","setmonsterList","fetchMonsters","fetch","then","response","json","responseText","data","equipmentsList","setequipmentList","fetchEquipments","materialsList","setmaterialsList","fetchMaterials","treasuresList","settreasuresList","fetchTreasures","content","setContent","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Monsters from './monsters'\nimport Equipments from './equipments'\nimport Materials from './materials'\nimport Treasures from './treasures'\nimport Header from './header'\n\n\n// parent \nconst Main = () => {\n\n    \n    //fetch na sessão 'monsters' da API e converte para JSON\n    \n    var [monstersList, setmonsterList] = useState([])\n\n    useEffect(() => {\n        fetchMonsters();\n    }, [])\n\n    const fetchMonsters = () => {\n        fetch(\"https://botw-compendium.herokuapp.com/api/v2/category/monsters\")\n        .then(response => response.json())\n        .then(responseText => setmonsterList(responseText.data))\n    }\n\n    //fetch na sessão 'equipments' da API e converte para JSON\n    \n    var [equipmentsList, setequipmentList] = useState([])\n    \n    useEffect(() => {\n        fetchEquipments();\n    }, [])\n\n    const fetchEquipments = () => {\n        fetch(\"https://botw-compendium.herokuapp.com/api/v2/category/equipment\")\n        .then(response => response.json())\n        .then(responseText => setequipmentList(responseText.data))\n    }\n\n    //fetch na sessão 'materials' da API e converte para JSON\n\n    var [materialsList, setmaterialsList] = useState([])\n\n    useEffect(() => {\n        fetchMaterials();\n    }, [])\n\n    const fetchMaterials = () => {\n        fetch(\"https://botw-compendium.herokuapp.com/api/v2/category/materials\")\n        .then(response => response.json())\n        .then(responseText => setmaterialsList(responseText.data))\n    }\n    //fetch na sessão 'treasures' da API e converte para JSON\n\n    var [treasuresList, settreasuresList] = useState([])\n\n    useEffect(() => {\n        fetchTreasures();\n    }, [])\n\n    const fetchTreasures = () => {\n        fetch(\"https://botw-compendium.herokuapp.com/api/v2/category/treasure\")\n        .then(response => response.json())\n        .then(responseText => settreasuresList(responseText.data))\n    }\n\n    const [content, setContent] = useState('Monsters');\n\n    if (content === 'Monsters') {\n        console.log(monstersList)\n        return ( \n            <>\n            <Header content={content} setContent={setContent}/>\n            <Monsters monstersList={monstersList}/>             {/*passa o objeto da API como parametro para o componente child*/}\n            </>\n        );\n    } \n\n    if (content === 'Equipments') {\n        console.log(equipmentsList)\n        return (\n            <>\n            <Header content={content} setContent={setContent}/>\n            <Equipments equipmentsList={equipmentsList}/>\n            </>\n        )\n    }\n\n    if (content === 'Materials') {\n        return (\n            <>\n            <Header content={content} setContent={setContent}/>\n            <Materials materialsList={materialsList}/>\n            </>\n        )\n    }\n    if (content === 'Treasures') {\n        return (\n            <>\n            <Header content={content} setContent={setContent}/>\n            <Treasures treasuresList={treasuresList}/>\n            </>\n        )\n    }\n\n}\n \nexport default Main;"]},"metadata":{},"sourceType":"module"}