{"ast":null,"code":"var _jsxFileName = \"/home/erison/Documents/Projetos/botw-compendium-ReactJs/src/components/monsters.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react'; //Componente Monsters: Responsável por renderizar os dados da entrada 'monsters' da API, recebidos pelo componente Main.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Monsters = ({\n  monstersList,\n  searchterm\n}) => {\n  _s();\n\n  const MonsterName = monstersList.map(monster => monster.name.toLowerCase());\n  useEffect(() => {\n    console.log(MonsterName);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"monsters\",\n    children: monstersList.filter(val => {\n      if (searchterm == '') {\n        return val;\n      } else if (MonsterName.includes(searchterm)) {\n        return val;\n      }\n    }).map(monster => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"monster-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: monster.name.toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: monster.image,\n        alt: monster.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: monster.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [\"Common Locations \", monster.common_locations === null || monster.common_locations.length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Hyrule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this) : monster.common_locations.map(location => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: location\n        }, location + monster.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 72\n        }, this)), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [\"Drops \", monster.drops == null || monster.drops.length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this) : monster.drops.map(drop => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: drop.charAt(0).toUpperCase() + drop.slice(1)\n          }, drop + monster.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 57\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)]\n    }, monster.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Monsters, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Monsters;\nexport default Monsters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Monsters\");","map":{"version":3,"sources":["/home/erison/Documents/Projetos/botw-compendium-ReactJs/src/components/monsters.jsx"],"names":["React","useEffect","Monsters","monstersList","searchterm","MonsterName","map","monster","name","toLowerCase","console","log","filter","val","includes","toUpperCase","image","description","common_locations","length","location","id","drops","drop","charAt","slice"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;;;AACA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,YAAD;AAAeC,EAAAA;AAAf,CAAD,KAAgC;AAAA;;AAC/C,QAAMC,WAAW,GAAGF,YAAY,CAACG,GAAb,CAAiBC,OAAO,IAAIA,OAAO,CAACC,IAAR,CAAaC,WAAb,EAA5B,CAApB;AACAR,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ;AACD,GAFQ,CAAT;AAGA,sBAEE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,cACGF,YAAY,CAACS,MAAb,CAAqBC,GAAD,IAAS;AAC5B,UAAIT,UAAU,IAAI,EAAlB,EAAsB;AACpB,eAAOS,GAAP;AACD,OAFD,MAEO,IAAIR,WAAW,CAACS,QAAZ,CAAqBV,UAArB,CAAJ,EAAsC;AAC3C,eAAOS,GAAP;AACD;AACF,KANA,EAMEP,GANF,CAMMC,OAAO,iBACZ;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAA,kBAAKA,OAAO,CAACC,IAAR,CAAaO,WAAb;AAAL;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,GAAG,EAAER,OAAO,CAACS,KAAlB;AAAyB,QAAA,GAAG,EAAET,OAAO,CAACC;AAAtC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBAAID,OAAO,CAACU;AAAZ;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,wCACoBV,OAAO,CAACW,gBAAR,KAA6B,IAA7B,IAAqCX,OAAO,CAACW,gBAAR,CAAyBC,MAAzB,KAAoC,CAAzE,gBAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADkB,GACAZ,OAAO,CAACW,gBAAR,CAAyBZ,GAAzB,CAA6Bc,QAAQ,iBAAI;AAAA,oBAAiCA;AAAjC,WAASA,QAAQ,GAAGb,OAAO,CAACc,EAA5B;AAAA;AAAA;AAAA;AAAA,gBAAzC,CAFpB,eAGE;AAAA,+BACSd,OAAO,CAACe,KAAR,IAAiB,IAAjB,IAAyBf,OAAO,CAACe,KAAR,CAAcH,MAAd,KAAyB,CAAlD,gBACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADO,GACSZ,OAAO,CAACe,KAAR,CAAchB,GAAd,CAAkBiB,IAAI,iBAAI;AAAA,sBAA6BA,IAAI,CAACC,MAAL,CAAY,CAAZ,EAAeT,WAAf,KAA+BQ,IAAI,CAACE,KAAL,CAAW,CAAX;AAA5D,aAASF,IAAI,GAAGhB,OAAO,CAACc,EAAxB;AAAA;AAAA;AAAA;AAAA,kBAA1B,CAFlB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA,OAAmCd,OAAO,CAACc,EAA3C;AAAA;AAAA;AAAA;AAAA,YAPD;AADH;AAAA;AAAA;AAAA;AAAA,UAFF;AA2BD,CAhCD;;GAAMnB,Q;;KAAAA,Q;AAkCN,eAAeA,QAAf","sourcesContent":["import React, { useEffect } from 'react';\n\n//Componente Monsters: Responsável por renderizar os dados da entrada 'monsters' da API, recebidos pelo componente Main.\nconst Monsters = ({monstersList, searchterm}) => {\n  const MonsterName = monstersList.map(monster => monster.name.toLowerCase());\n  useEffect(() => {\n    console.log(MonsterName)\n  })\n  return (  \n\n    <div className='monsters'>\n      {monstersList.filter((val) => {\n        if (searchterm == '') {\n          return val\n        } else if (MonsterName.includes(searchterm)) {\n          return val\n        }\n      }).map(monster => \n        <div className='monster-item' key={monster.id}>\n          <h1>{monster.name.toUpperCase()}</h1>\n          <img src={monster.image} alt={monster.name}/>\n          <p>{monster.description}</p>\n          <ul>\n            Common Locations {monster.common_locations === null || monster.common_locations.length === 0 ? \n            <li>Hyrule</li> : monster.common_locations.map(location => <li key={location + monster.id}>{location}</li>)}\n            <ul>\n              Drops {monster.drops == null || monster.drops.length === 0 ? \n              <li>None</li> : monster.drops.map(drop => <li key={drop + monster.id}>{drop.charAt(0).toUpperCase() + drop.slice(1)}</li>)}\n            </ul>\n          </ul>\n        </div>\n      )}\n    </div>\n\n  )\n}\n \nexport default Monsters;\n"]},"metadata":{},"sourceType":"module"}