{"ast":null,"code":"var _jsxFileName = \"/home/erison/Documents/Projetos/botw-compendium-ReactJs/src/components/main.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Monsters from './monsters/monsters';\nimport Equipments from './equipments/equipments';\nimport Materials from './materials/materials';\nimport Treasures from './treasures/treasures';\nimport Creatures from './creatures/creatures';\nimport Header from './header/header';\n/*\nComponente Main\n    -Responsável por solicitar os dados da API\n    -Passar os dados para JSON\n    -Criar os states contento os dados\n    -Passar os dados para cada componente como parâmetros\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  // A função fetchAPI recebe como parâmetro a url de cada entrada da API. 'SetList' é responsável por definir o state quando a função é chamada.\n  const fetchAPI = (url, setList) => {\n    fetch(url).then(response => response.json()).then(responseText => setList(responseText.data));\n  }; // State onde os dados da API serão armazenados\n\n\n  const [monstersList, setmonsterList] = useState([]);\n  const [equipmentsList, setequipmentList] = useState([]);\n  const [materialsList, setmaterialsList] = useState([]);\n  const [treasuresList, settreasuresList] = useState([]);\n  const [creaturesList, setcreaturesList] = useState([]);\n  const [content, setContent] = useState('Monsters'); // Define qual componente será renderizado\n\n  const [searchterm, setsearchTerm] = useState(''); // Termo de busca\n\n  if (content === 'Monsters') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        content: content,\n        setContent: setContent,\n        setsearchTerm: setsearchTerm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Monsters, {\n        fetchAPI: fetchAPI,\n        monstersList: monstersList,\n        setmonsterList: setmonsterList,\n        searchterm: searchterm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n  if (content === 'Equipments') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        content: content,\n        setContent: setContent,\n        setsearchTerm: setsearchTerm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Equipments, {\n        fetchAPI: fetchAPI,\n        equipmentsList: equipmentsList,\n        setequipmentList: setequipmentList,\n        searchterm: searchterm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true);\n  }\n\n  if (content === 'Materials') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        content: content,\n        setContent: setContent,\n        setsearchTerm: setsearchTerm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Materials, {\n        fetchAPI: fetchAPI,\n        materialsList: materialsList,\n        setmaterialsList: setmaterialsList,\n        searchterm: searchterm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true);\n  }\n\n  if (content === 'Treasures') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        content: content,\n        setContent: setContent,\n        setsearchTerm: setsearchTerm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Treasures, {\n        fetchAPI: fetchAPI,\n        treasuresList: treasuresList,\n        settreasuresList: settreasuresList,\n        searchterm: searchterm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true);\n  }\n\n  if (content === 'Creatures') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        content: content,\n        setContent: setContent,\n        setsearchTerm: setsearchTerm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Creatures, {\n        fetchAPI: fetchAPI,\n        creaturesList: creaturesList,\n        setcreaturesList: setcreaturesList,\n        searchterm: searchterm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true);\n  }\n};\n\n_s(Main, \"uttorwa7pYjnpdcy665gizqKjlI=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/home/erison/Documents/Projetos/botw-compendium-ReactJs/src/components/main.jsx"],"names":["React","useState","useEffect","Monsters","Equipments","Materials","Treasures","Creatures","Header","Main","fetchAPI","url","setList","fetch","then","response","json","responseText","data","monstersList","setmonsterList","equipmentsList","setequipmentList","materialsList","setmaterialsList","treasuresList","settreasuresList","creaturesList","setcreaturesList","content","setContent","searchterm","setsearchTerm"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Monsters from './monsters/monsters'\nimport Equipments from './equipments/equipments'\nimport Materials from './materials/materials'\nimport Treasures from './treasures/treasures'\nimport Creatures from './creatures/creatures'\nimport Header from './header/header'\n\n\n/*\nComponente Main\n    -Responsável por solicitar os dados da API\n    -Passar os dados para JSON\n    -Criar os states contento os dados\n    -Passar os dados para cada componente como parâmetros\n*/\nconst Main = () => {\n    // A função fetchAPI recebe como parâmetro a url de cada entrada da API. 'SetList' é responsável por definir o state quando a função é chamada.\n    const fetchAPI = (url, setList) => {\n        fetch(url)\n        .then(response => response.json())\n        .then(responseText => setList(responseText.data))\n    }\n    // State onde os dados da API serão armazenados\n    const [monstersList, setmonsterList] = useState([]);\n    const [equipmentsList, setequipmentList] = useState([]);\n    const [materialsList, setmaterialsList] = useState([]);\n    const [treasuresList, settreasuresList] = useState([]);\n    const [creaturesList, setcreaturesList] = useState([]);\n\n    const [content, setContent] = useState('Monsters');// Define qual componente será renderizado\n    const [searchterm, setsearchTerm] = useState('');// Termo de busca\n\n    if (content === 'Monsters') {\n        return ( \n            <>\n            <Header content={content} setContent={setContent} setsearchTerm={setsearchTerm}/>\n            <Monsters fetchAPI={fetchAPI} monstersList={monstersList} setmonsterList={setmonsterList} searchterm={searchterm}/>\n            </>\n        );\n    } \n    if (content === 'Equipments') {\n        return (\n            <>\n            <Header content={content} setContent={setContent} setsearchTerm={setsearchTerm}/>\n            {<Equipments fetchAPI={fetchAPI} equipmentsList={equipmentsList} setequipmentList={setequipmentList} searchterm={searchterm}/>}\n            </>\n        )\n    }\n    if (content === 'Materials') {\n        return (\n            <>\n            <Header content={content} setContent={setContent} setsearchTerm={setsearchTerm}/>\n            {<Materials fetchAPI={fetchAPI} materialsList={materialsList} setmaterialsList={setmaterialsList} searchterm={searchterm}/>}\n            </>\n        )\n    }\n    if (content === 'Treasures') {\n        return (\n            <>\n            <Header content={content} setContent={setContent} setsearchTerm={setsearchTerm}/>\n            {<Treasures fetchAPI={fetchAPI} treasuresList={treasuresList} settreasuresList={settreasuresList} searchterm={searchterm}/>}\n            </>\n        )\n    }\n    if (content === 'Creatures') {\n        return (\n            <>\n            <Header content={content} setContent={setContent} setsearchTerm={setsearchTerm}/>\n            {<Creatures fetchAPI={fetchAPI} creaturesList={creaturesList} setcreaturesList={setcreaturesList} searchterm={searchterm}/>}\n            </>\n        )\n    }\n}\n \nexport default Main;"]},"metadata":{},"sourceType":"module"}