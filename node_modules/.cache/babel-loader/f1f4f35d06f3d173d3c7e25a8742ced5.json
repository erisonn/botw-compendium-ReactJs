{"ast":null,"code":"var _jsxFileName = \"/home/erison/Documents/the_odin_project/botw-compendium-ReactJs/src/components/main.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Monsters from './monsters';\nimport Equipments from './equipments';\nimport Materials from './materials';\nimport Treasures from './treasures';\nimport Header from './header'; // parent \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  function fetchAPI(url) {\n    let request = new XMLHttpRequest();\n    request.open(\"GET\", url, true);\n\n    xhr.onload = function (e) {\n      if (xhr.readyState === 4) {\n        if (xhr.status === 200) {\n          console.log(xhr.responseText);\n        } else {\n          console.error(xhr.statusText);\n        }\n      }\n    };\n\n    xhr.onerror = function (e) {\n      console.error(xhr.statusText);\n    };\n\n    request.send();\n    return request.responseText;\n  } //fetch na sessão 'monsters' da API e converte para JSON\n\n\n  var [monstersList, setmonsterList] = useState([]);\n  useEffect(() => {\n    const API_URL = 'https://botw-compendium.herokuapp.com/api/v2/category/monsters';\n    var monsters = fetchAPI(API_URL);\n    var monsters_data = JSON.parse(monsters);\n    setmonsterList(monsters_data.data);\n  }, []); //fetch na sessão 'equipments' da API e converte para JSON\n\n  var [equipmentsList, setequipmentList] = useState([]);\n  useEffect(() => {\n    const API_URL = 'https://botw-compendium.herokuapp.com/api/v2/category/equipment';\n    var equipments = fetchAPI(API_URL);\n    var equipments_data = JSON.parse(equipments);\n    setequipmentList(equipments_data.data);\n  }, []); //fetch na sessão 'materials' da API e converte para JSON\n\n  var [materialsList, setmaterialsList] = useState([]);\n  useEffect(() => {\n    const API_URL = 'https://botw-compendium.herokuapp.com/api/v2/category/materials';\n    var materials = fetchAPI(API_URL);\n    var materials_data = JSON.parse(materials);\n    setmaterialsList(materials_data.data);\n  }, []); //fetch na sessão 'treasures' da API e converte para JSON\n\n  var [treasuresList, settreasuresList] = useState([]);\n  useEffect(() => {\n    const API_URL = 'https://botw-compendium.herokuapp.com/api/v2/category/treasure';\n    var treasures = fetchAPI(API_URL);\n    var treasures_data = JSON.parse(treasures);\n    settreasuresList(treasures_data.data);\n  }, []);\n  const [content, setContent] = useState('Monsters');\n\n  if (content === 'Monsters') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        content: content,\n        setContent: setContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Monsters, {\n        monstersList: monstersList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), \"             \"]\n    }, void 0, true);\n  }\n\n  if (content === 'Equipments') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        content: content,\n        setContent: setContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Equipments, {\n        equipmentsList: equipmentsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n  if (content === 'Materials') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        content: content,\n        setContent: setContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Materials, {\n        materialsList: materialsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n  if (content === 'Treasures') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        content: content,\n        setContent: setContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Treasures, {\n        treasuresList: treasuresList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n};\n\n_s(Main, \"X/oCi4BzxAPuraRHXGTqnOXGeo8=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/home/erison/Documents/the_odin_project/botw-compendium-ReactJs/src/components/main.jsx"],"names":["React","useState","useEffect","Monsters","Equipments","Materials","Treasures","Header","Main","fetchAPI","url","request","XMLHttpRequest","open","xhr","onload","e","readyState","status","console","log","responseText","error","statusText","onerror","send","monstersList","setmonsterList","API_URL","monsters","monsters_data","JSON","parse","data","equipmentsList","setequipmentList","equipments","equipments_data","materialsList","setmaterialsList","materials","materials_data","treasuresList","settreasuresList","treasures","treasures_data","content","setContent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Monsters from './monsters'\nimport Equipments from './equipments'\nimport Materials from './materials'\nimport Treasures from './treasures'\nimport Header from './header'\n\n\n// parent \nconst Main = () => {\n\n    function fetchAPI(url) {\n        let request = new XMLHttpRequest()\n        request.open(\"GET\", url, true)\n        xhr.onload = function (e) {\n            if (xhr.readyState === 4) {\n              if (xhr.status === 200) {\n                console.log(xhr.responseText);\n              } else {\n                console.error(xhr.statusText);\n              }\n            }\n          };\n          xhr.onerror = function (e) {\n            console.error(xhr.statusText);\n          };\n        request.send()\n        return request.responseText\n    }\n    //fetch na sessão 'monsters' da API e converte para JSON\n    \n    var [monstersList, setmonsterList] = useState([])\n\n    useEffect(() => {\n        const API_URL = 'https://botw-compendium.herokuapp.com/api/v2/category/monsters'\n        var monsters = fetchAPI(API_URL);\n        var monsters_data = JSON.parse(monsters);\n        setmonsterList(monsters_data.data)\n    }, [])\n\n    //fetch na sessão 'equipments' da API e converte para JSON\n    \n    var [equipmentsList, setequipmentList] = useState([])\n    \n    useEffect(() => {\n        const API_URL = 'https://botw-compendium.herokuapp.com/api/v2/category/equipment'\n        var equipments = fetchAPI(API_URL);\n        var equipments_data = JSON.parse(equipments);\n        setequipmentList(equipments_data.data)\n    }, [])\n\n    //fetch na sessão 'materials' da API e converte para JSON\n\n    var [materialsList, setmaterialsList] = useState([])\n\n    useEffect(() => {\n        const API_URL = 'https://botw-compendium.herokuapp.com/api/v2/category/materials'\n        var materials = fetchAPI(API_URL);\n        var materials_data = JSON.parse(materials);\n        setmaterialsList(materials_data.data)\n    }, [])\n    //fetch na sessão 'treasures' da API e converte para JSON\n\n    var [treasuresList, settreasuresList] = useState([])\n\n    useEffect(() => {\n        const API_URL = 'https://botw-compendium.herokuapp.com/api/v2/category/treasure'\n        var treasures = fetchAPI(API_URL);\n        var treasures_data = JSON.parse(treasures);\n        settreasuresList(treasures_data.data)\n    }, [])\n\n    const [content, setContent] = useState('Monsters');\n\n    if (content === 'Monsters') {\n        return ( \n            <>\n            <Header content={content} setContent={setContent}/>\n            <Monsters monstersList={monstersList}/>             {/*passa o objeto da API como parametro para o componente child*/}\n            </>\n        );\n    } \n\n    if (content === 'Equipments') {\n        return (\n            <>\n            <Header content={content} setContent={setContent}/>\n            <Equipments equipmentsList={equipmentsList}/>\n            </>\n        )\n    }\n\n    if (content === 'Materials') {\n        return (\n            <>\n            <Header content={content} setContent={setContent}/>\n            <Materials materialsList={materialsList}/>\n            </>\n        )\n    }\n    if (content === 'Treasures') {\n        return (\n            <>\n            <Header content={content} setContent={setContent}/>\n            <Treasures treasuresList={treasuresList}/>\n            </>\n        )\n    }\n\n}\n \nexport default Main;"]},"metadata":{},"sourceType":"module"}